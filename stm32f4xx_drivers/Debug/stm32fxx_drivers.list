
stm32fxx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005c4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800076c  08000774  00010774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800076c  0800076c  00010774  2**0
                  CONTENTS
  4 .ARM          00000000  0800076c  0800076c  00010774  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800076c  08000774  00010774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800076c  0800076c  0001076c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000770  08000770  00010770  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010774  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010774  2**0
                  CONTENTS, READONLY
 13 .debug_info   000009b6  00000000  00000000  000107a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000022b  00000000  00000000  0001115a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00011388  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000098  00000000  00000000  00011448  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000193d  00000000  00000000  000114e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000f8e  00000000  00000000  00012e1d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00006315  00000000  00000000  00013dab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001a0c0  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000024c  00000000  00000000  0001a110  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000754 	.word	0x08000754

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000754 	.word	0x08000754

080001e8 <delay>:

#define BTN_PRESSED ENABLE
#define DELAY       400000

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < DELAY; i++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr
 8000210:	00061a7f 	.word	0x00061a7f

08000214 <main>:

int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpio_led;
	gpio_led.pGPIOx = GPIOD;
 800021a:	4b1a      	ldr	r3, [pc, #104]	; (8000284 <main+0x70>)
 800021c:	60fb      	str	r3, [r7, #12]
	gpio_led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NUM_12;
 800021e:	230c      	movs	r3, #12
 8000220:	743b      	strb	r3, [r7, #16]
	gpio_led.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000222:	2301      	movs	r3, #1
 8000224:	747b      	strb	r3, [r7, #17]
	gpio_led.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_VERYHIGH;
 8000226:	2303      	movs	r3, #3
 8000228:	74bb      	strb	r3, [r7, #18]
	gpio_led.GPIO_PinConfig.GPIO_PinOType = GPIO_OUTTYPE_PP;
 800022a:	2300      	movs	r3, #0
 800022c:	753b      	strb	r3, [r7, #20]
	gpio_led.GPIO_PinConfig.GPIO_PinPUPDControl = GPIO_NO_PUPD;
 800022e:	2300      	movs	r3, #0
 8000230:	74fb      	strb	r3, [r7, #19]

	GPIO_Handle_t gpio_button;
	gpio_button.pGPIOx = GPIOA;
 8000232:	4b15      	ldr	r3, [pc, #84]	; (8000288 <main+0x74>)
 8000234:	603b      	str	r3, [r7, #0]
	gpio_button.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NUM_0;
 8000236:	2300      	movs	r3, #0
 8000238:	713b      	strb	r3, [r7, #4]
	gpio_button.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800023a:	2300      	movs	r3, #0
 800023c:	717b      	strb	r3, [r7, #5]
	gpio_button.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_VERYHIGH;
 800023e:	2303      	movs	r3, #3
 8000240:	71bb      	strb	r3, [r7, #6]
	gpio_button.GPIO_PinConfig.GPIO_PinPUPDControl = GPIO_NO_PUPD;
 8000242:	2300      	movs	r3, #0
 8000244:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000246:	2101      	movs	r1, #1
 8000248:	480f      	ldr	r0, [pc, #60]	; (8000288 <main+0x74>)
 800024a:	f000 f91b 	bl	8000484 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOD, ENABLE);
 800024e:	2101      	movs	r1, #1
 8000250:	480c      	ldr	r0, [pc, #48]	; (8000284 <main+0x70>)
 8000252:	f000 f917 	bl	8000484 <GPIO_PeriClockControl>

	GPIO_Init(&gpio_button);
 8000256:	463b      	mov	r3, r7
 8000258:	4618      	mov	r0, r3
 800025a:	f000 f840 	bl	80002de <GPIO_Init>
	GPIO_Init(&gpio_led);
 800025e:	f107 030c 	add.w	r3, r7, #12
 8000262:	4618      	mov	r0, r3
 8000264:	f000 f83b 	bl	80002de <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NUM_0) == BTN_PRESSED)
 8000268:	2100      	movs	r1, #0
 800026a:	4807      	ldr	r0, [pc, #28]	; (8000288 <main+0x74>)
 800026c:	f000 fa22 	bl	80006b4 <GPIO_ReadFromInputPin>
 8000270:	4603      	mov	r3, r0
 8000272:	2b01      	cmp	r3, #1
 8000274:	d1f8      	bne.n	8000268 <main+0x54>
		{
			GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NUM_12);
 8000276:	210c      	movs	r1, #12
 8000278:	4802      	ldr	r0, [pc, #8]	; (8000284 <main+0x70>)
 800027a:	f000 fa31 	bl	80006e0 <GPIO_ToggleOutputPin>
			delay();
 800027e:	f7ff ffb3 	bl	80001e8 <delay>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NUM_0) == BTN_PRESSED)
 8000282:	e7f1      	b.n	8000268 <main+0x54>
 8000284:	40020c00 	.word	0x40020c00
 8000288:	40020000 	.word	0x40020000

0800028c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800028c:	480d      	ldr	r0, [pc, #52]	; (80002c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800028e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000290:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000294:	480c      	ldr	r0, [pc, #48]	; (80002c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000296:	490d      	ldr	r1, [pc, #52]	; (80002cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000298:	4a0d      	ldr	r2, [pc, #52]	; (80002d0 <LoopForever+0xe>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800029c:	e002      	b.n	80002a4 <LoopCopyDataInit>

0800029e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800029e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002a2:	3304      	adds	r3, #4

080002a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002a8:	d3f9      	bcc.n	800029e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002aa:	4a0a      	ldr	r2, [pc, #40]	; (80002d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002ac:	4c0a      	ldr	r4, [pc, #40]	; (80002d8 <LoopForever+0x16>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002b0:	e001      	b.n	80002b6 <LoopFillZerobss>

080002b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002b4:	3204      	adds	r2, #4

080002b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002b8:	d3fb      	bcc.n	80002b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ba:	f000 fa27 	bl	800070c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002be:	f7ff ffa9 	bl	8000214 <main>

080002c2 <LoopForever>:

LoopForever:
    b LoopForever
 80002c2:	e7fe      	b.n	80002c2 <LoopForever>
  ldr   r0, =_estack
 80002c4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002cc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002d0:	08000774 	.word	0x08000774
  ldr r2, =_sbss
 80002d4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002d8:	2000001c 	.word	0x2000001c

080002dc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002dc:	e7fe      	b.n	80002dc <ADC_IRQHandler>

080002de <GPIO_Init>:

#include "stm32f407xx_gpio_driver.h"

// Init Functions
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80002de:	b480      	push	{r7}
 80002e0:	b085      	sub	sp, #20
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80002e6:	2300      	movs	r3, #0
 80002e8:	60fb      	str	r3, [r7, #12]

	// Configure the mode of the GPIO pin
	if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	795b      	ldrb	r3, [r3, #5]
 80002ee:	2b03      	cmp	r3, #3
 80002f0:	d81f      	bhi.n	8000332 <GPIO_Init+0x54>
	{
		// non-interrupt mode
		temp = (pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	795b      	ldrb	r3, [r3, #5]
 80002f6:	461a      	mov	r2, r3
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	791b      	ldrb	r3, [r3, #4]
 80002fc:	005b      	lsls	r3, r3, #1
 80002fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000302:	60fb      	str	r3, [r7, #12]
		pGPIOHandle -> pGPIOx -> MODER &= ~(0x3 << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	681a      	ldr	r2, [r3, #0]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	791b      	ldrb	r3, [r3, #4]
 800030e:	005b      	lsls	r3, r3, #1
 8000310:	2103      	movs	r1, #3
 8000312:	fa01 f303 	lsl.w	r3, r1, r3
 8000316:	43db      	mvns	r3, r3
 8000318:	4619      	mov	r1, r3
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	400a      	ands	r2, r1
 8000320:	601a      	str	r2, [r3, #0]
		pGPIOHandle -> pGPIOx -> MODER |= temp;
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	6819      	ldr	r1, [r3, #0]
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	68fa      	ldr	r2, [r7, #12]
 800032e:	430a      	orrs	r2, r1
 8000330:	601a      	str	r2, [r3, #0]
	}
	else
	{
		// TO DO LATER (Interrupt Mode)
	}
	temp = 0;
 8000332:	2300      	movs	r3, #0
 8000334:	60fb      	str	r3, [r7, #12]

	// Configure the pin speed
	temp = (pGPIOHandle -> GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	799b      	ldrb	r3, [r3, #6]
 800033a:	461a      	mov	r2, r3
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	791b      	ldrb	r3, [r3, #4]
 8000340:	005b      	lsls	r3, r3, #1
 8000342:	fa02 f303 	lsl.w	r3, r2, r3
 8000346:	60fb      	str	r3, [r7, #12]
	pGPIOHandle -> pGPIOx -> OSPEEDR &= ~(0x3 << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	689a      	ldr	r2, [r3, #8]
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	791b      	ldrb	r3, [r3, #4]
 8000352:	005b      	lsls	r3, r3, #1
 8000354:	2103      	movs	r1, #3
 8000356:	fa01 f303 	lsl.w	r3, r1, r3
 800035a:	43db      	mvns	r3, r3
 800035c:	4619      	mov	r1, r3
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	400a      	ands	r2, r1
 8000364:	609a      	str	r2, [r3, #8]
	pGPIOHandle -> pGPIOx -> OSPEEDR |= temp;
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	6899      	ldr	r1, [r3, #8]
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	68fa      	ldr	r2, [r7, #12]
 8000372:	430a      	orrs	r2, r1
 8000374:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000376:	2300      	movs	r3, #0
 8000378:	60fb      	str	r3, [r7, #12]

	// Configure the PUPD settings
	temp = (pGPIOHandle -> GPIO_PinConfig.GPIO_PinPUPDControl << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	79db      	ldrb	r3, [r3, #7]
 800037e:	461a      	mov	r2, r3
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	791b      	ldrb	r3, [r3, #4]
 8000384:	005b      	lsls	r3, r3, #1
 8000386:	fa02 f303 	lsl.w	r3, r2, r3
 800038a:	60fb      	str	r3, [r7, #12]
	pGPIOHandle -> pGPIOx -> PUPDR &= ~(0x3 << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	68da      	ldr	r2, [r3, #12]
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	791b      	ldrb	r3, [r3, #4]
 8000396:	005b      	lsls	r3, r3, #1
 8000398:	2103      	movs	r1, #3
 800039a:	fa01 f303 	lsl.w	r3, r1, r3
 800039e:	43db      	mvns	r3, r3
 80003a0:	4619      	mov	r1, r3
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	400a      	ands	r2, r1
 80003a8:	60da      	str	r2, [r3, #12]
	pGPIOHandle -> pGPIOx -> PUPDR |= temp;
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	68d9      	ldr	r1, [r3, #12]
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	68fa      	ldr	r2, [r7, #12]
 80003b6:	430a      	orrs	r2, r1
 80003b8:	60da      	str	r2, [r3, #12]
	temp = 0;
 80003ba:	2300      	movs	r3, #0
 80003bc:	60fb      	str	r3, [r7, #12]

	// Configure the output type
	temp = (pGPIOHandle -> GPIO_PinConfig.GPIO_PinOType << (1 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	7a1b      	ldrb	r3, [r3, #8]
 80003c2:	461a      	mov	r2, r3
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	791b      	ldrb	r3, [r3, #4]
 80003c8:	fa02 f303 	lsl.w	r3, r2, r3
 80003cc:	60fb      	str	r3, [r7, #12]
	pGPIOHandle -> pGPIOx -> OTYPER &= ~(0x1 << (1 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	685a      	ldr	r2, [r3, #4]
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	791b      	ldrb	r3, [r3, #4]
 80003d8:	4619      	mov	r1, r3
 80003da:	2301      	movs	r3, #1
 80003dc:	408b      	lsls	r3, r1
 80003de:	43db      	mvns	r3, r3
 80003e0:	4619      	mov	r1, r3
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	400a      	ands	r2, r1
 80003e8:	605a      	str	r2, [r3, #4]
	pGPIOHandle -> pGPIOx -> OTYPER |= temp;
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	6859      	ldr	r1, [r3, #4]
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	68fa      	ldr	r2, [r7, #12]
 80003f6:	430a      	orrs	r2, r1
 80003f8:	605a      	str	r2, [r3, #4]
	temp = 0;
 80003fa:	2300      	movs	r3, #0
 80003fc:	60fb      	str	r3, [r7, #12]

	// Configure the alternate function registers
	if(pGPIOHandle ->  GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALT_FN)
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	795b      	ldrb	r3, [r3, #5]
 8000402:	2b02      	cmp	r3, #2
 8000404:	d135      	bne.n	8000472 <GPIO_Init+0x194>
	{
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber / 8;
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	791b      	ldrb	r3, [r3, #4]
 800040a:	08db      	lsrs	r3, r3, #3
 800040c:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber % 8;
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	791b      	ldrb	r3, [r3, #4]
 8000412:	f003 0307 	and.w	r3, r3, #7
 8000416:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle -> pGPIOx -> AFR[temp1] &= ~(0xF << (4 * temp2));
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	681a      	ldr	r2, [r3, #0]
 800041c:	7afb      	ldrb	r3, [r7, #11]
 800041e:	3308      	adds	r3, #8
 8000420:	009b      	lsls	r3, r3, #2
 8000422:	4413      	add	r3, r2
 8000424:	685a      	ldr	r2, [r3, #4]
 8000426:	7abb      	ldrb	r3, [r7, #10]
 8000428:	009b      	lsls	r3, r3, #2
 800042a:	210f      	movs	r1, #15
 800042c:	fa01 f303 	lsl.w	r3, r1, r3
 8000430:	43db      	mvns	r3, r3
 8000432:	4618      	mov	r0, r3
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	6819      	ldr	r1, [r3, #0]
 8000438:	7afb      	ldrb	r3, [r7, #11]
 800043a:	4002      	ands	r2, r0
 800043c:	3308      	adds	r3, #8
 800043e:	009b      	lsls	r3, r3, #2
 8000440:	440b      	add	r3, r1
 8000442:	605a      	str	r2, [r3, #4]
		pGPIOHandle -> pGPIOx -> AFR[temp1] |= (pGPIOHandle -> GPIO_PinConfig.GPIO_PinAltFuncMode << (4 * temp2));
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	681a      	ldr	r2, [r3, #0]
 8000448:	7afb      	ldrb	r3, [r7, #11]
 800044a:	3308      	adds	r3, #8
 800044c:	009b      	lsls	r3, r3, #2
 800044e:	4413      	add	r3, r2
 8000450:	685a      	ldr	r2, [r3, #4]
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	7a5b      	ldrb	r3, [r3, #9]
 8000456:	4619      	mov	r1, r3
 8000458:	7abb      	ldrb	r3, [r7, #10]
 800045a:	009b      	lsls	r3, r3, #2
 800045c:	fa01 f303 	lsl.w	r3, r1, r3
 8000460:	4618      	mov	r0, r3
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	6819      	ldr	r1, [r3, #0]
 8000466:	7afb      	ldrb	r3, [r7, #11]
 8000468:	4302      	orrs	r2, r0
 800046a:	3308      	adds	r3, #8
 800046c:	009b      	lsls	r3, r3, #2
 800046e:	440b      	add	r3, r1
 8000470:	605a      	str	r2, [r3, #4]
	}
	temp = 0;
 8000472:	2300      	movs	r3, #0
 8000474:	60fb      	str	r3, [r7, #12]
}
 8000476:	bf00      	nop
 8000478:	3714      	adds	r7, #20
 800047a:	46bd      	mov	sp, r7
 800047c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000480:	4770      	bx	lr
	...

08000484 <GPIO_PeriClockControl>:
}


// Peripheral Clock Control
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t state)
{
 8000484:	b480      	push	{r7}
 8000486:	b083      	sub	sp, #12
 8000488:	af00      	add	r7, sp, #0
 800048a:	6078      	str	r0, [r7, #4]
 800048c:	460b      	mov	r3, r1
 800048e:	70fb      	strb	r3, [r7, #3]
	if(state == ENABLE)
 8000490:	78fb      	ldrb	r3, [r7, #3]
 8000492:	2b01      	cmp	r3, #1
 8000494:	d178      	bne.n	8000588 <GPIO_PeriClockControl+0x104>
	{
		if(pGPIOx == GPIOA)      {GPIOA_PERIPH_CLK_EN();}
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	4a7a      	ldr	r2, [pc, #488]	; (8000684 <GPIO_PeriClockControl+0x200>)
 800049a:	4293      	cmp	r3, r2
 800049c:	d106      	bne.n	80004ac <GPIO_PeriClockControl+0x28>
 800049e:	4b7a      	ldr	r3, [pc, #488]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80004a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004a2:	4a79      	ldr	r2, [pc, #484]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80004a4:	f043 0301 	orr.w	r3, r3, #1
 80004a8:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH) {GPIOH_PERIPH_CLK_DIS();}
		else if(pGPIOx == GPIOI) {GPIOI_PERIPH_CLK_DIS();}
		else if(pGPIOx == GPIOJ) {GPIOJ_PERIPH_CLK_DIS();}
		else if(pGPIOx == GPIOK) {GPIOK_PERIPH_CLK_DIS();}
	}
}
 80004aa:	e0e5      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOB) {GPIOB_PERIPH_CLK_EN();}
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	4a77      	ldr	r2, [pc, #476]	; (800068c <GPIO_PeriClockControl+0x208>)
 80004b0:	4293      	cmp	r3, r2
 80004b2:	d106      	bne.n	80004c2 <GPIO_PeriClockControl+0x3e>
 80004b4:	4b74      	ldr	r3, [pc, #464]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80004b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b8:	4a73      	ldr	r2, [pc, #460]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80004ba:	f043 0302 	orr.w	r3, r3, #2
 80004be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004c0:	e0da      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOC) {GPIOC_PERIPH_CLK_EN();}
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	4a72      	ldr	r2, [pc, #456]	; (8000690 <GPIO_PeriClockControl+0x20c>)
 80004c6:	4293      	cmp	r3, r2
 80004c8:	d106      	bne.n	80004d8 <GPIO_PeriClockControl+0x54>
 80004ca:	4b6f      	ldr	r3, [pc, #444]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80004cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ce:	4a6e      	ldr	r2, [pc, #440]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80004d0:	f043 0304 	orr.w	r3, r3, #4
 80004d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004d6:	e0cf      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOD) {GPIOD_PERIPH_CLK_EN();}
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	4a6e      	ldr	r2, [pc, #440]	; (8000694 <GPIO_PeriClockControl+0x210>)
 80004dc:	4293      	cmp	r3, r2
 80004de:	d106      	bne.n	80004ee <GPIO_PeriClockControl+0x6a>
 80004e0:	4b69      	ldr	r3, [pc, #420]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80004e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e4:	4a68      	ldr	r2, [pc, #416]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80004e6:	f043 0308 	orr.w	r3, r3, #8
 80004ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004ec:	e0c4      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOE) {GPIOE_PERIPH_CLK_EN();}
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	4a69      	ldr	r2, [pc, #420]	; (8000698 <GPIO_PeriClockControl+0x214>)
 80004f2:	4293      	cmp	r3, r2
 80004f4:	d106      	bne.n	8000504 <GPIO_PeriClockControl+0x80>
 80004f6:	4b64      	ldr	r3, [pc, #400]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80004f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004fa:	4a63      	ldr	r2, [pc, #396]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80004fc:	f043 0310 	orr.w	r3, r3, #16
 8000500:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000502:	e0b9      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOF) {GPIOF_PERIPH_CLK_EN();}
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	4a65      	ldr	r2, [pc, #404]	; (800069c <GPIO_PeriClockControl+0x218>)
 8000508:	4293      	cmp	r3, r2
 800050a:	d106      	bne.n	800051a <GPIO_PeriClockControl+0x96>
 800050c:	4b5e      	ldr	r3, [pc, #376]	; (8000688 <GPIO_PeriClockControl+0x204>)
 800050e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000510:	4a5d      	ldr	r2, [pc, #372]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000512:	f043 0320 	orr.w	r3, r3, #32
 8000516:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000518:	e0ae      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOG) {GPIOG_PERIPH_CLK_EN();}
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	4a60      	ldr	r2, [pc, #384]	; (80006a0 <GPIO_PeriClockControl+0x21c>)
 800051e:	4293      	cmp	r3, r2
 8000520:	d106      	bne.n	8000530 <GPIO_PeriClockControl+0xac>
 8000522:	4b59      	ldr	r3, [pc, #356]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000524:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000526:	4a58      	ldr	r2, [pc, #352]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000528:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800052c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800052e:	e0a3      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOH) {GPIOH_PERIPH_CLK_EN();}
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	4a5c      	ldr	r2, [pc, #368]	; (80006a4 <GPIO_PeriClockControl+0x220>)
 8000534:	4293      	cmp	r3, r2
 8000536:	d106      	bne.n	8000546 <GPIO_PeriClockControl+0xc2>
 8000538:	4b53      	ldr	r3, [pc, #332]	; (8000688 <GPIO_PeriClockControl+0x204>)
 800053a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800053c:	4a52      	ldr	r2, [pc, #328]	; (8000688 <GPIO_PeriClockControl+0x204>)
 800053e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000542:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000544:	e098      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOI) {GPIOI_PERIPH_CLK_EN();}
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	4a57      	ldr	r2, [pc, #348]	; (80006a8 <GPIO_PeriClockControl+0x224>)
 800054a:	4293      	cmp	r3, r2
 800054c:	d106      	bne.n	800055c <GPIO_PeriClockControl+0xd8>
 800054e:	4b4e      	ldr	r3, [pc, #312]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000550:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000552:	4a4d      	ldr	r2, [pc, #308]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000554:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000558:	6313      	str	r3, [r2, #48]	; 0x30
}
 800055a:	e08d      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOJ) {GPIOJ_PERIPH_CLK_EN();}
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	4a53      	ldr	r2, [pc, #332]	; (80006ac <GPIO_PeriClockControl+0x228>)
 8000560:	4293      	cmp	r3, r2
 8000562:	d106      	bne.n	8000572 <GPIO_PeriClockControl+0xee>
 8000564:	4b48      	ldr	r3, [pc, #288]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000566:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000568:	4a47      	ldr	r2, [pc, #284]	; (8000688 <GPIO_PeriClockControl+0x204>)
 800056a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800056e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000570:	e082      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOK) {GPIOK_PERIPH_CLK_EN();}
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	4a4e      	ldr	r2, [pc, #312]	; (80006b0 <GPIO_PeriClockControl+0x22c>)
 8000576:	4293      	cmp	r3, r2
 8000578:	d17e      	bne.n	8000678 <GPIO_PeriClockControl+0x1f4>
 800057a:	4b43      	ldr	r3, [pc, #268]	; (8000688 <GPIO_PeriClockControl+0x204>)
 800057c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800057e:	4a42      	ldr	r2, [pc, #264]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000580:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000584:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000586:	e077      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		if(pGPIOx == GPIOA)      {GPIOA_PERIPH_CLK_DIS();}
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	4a3e      	ldr	r2, [pc, #248]	; (8000684 <GPIO_PeriClockControl+0x200>)
 800058c:	4293      	cmp	r3, r2
 800058e:	d106      	bne.n	800059e <GPIO_PeriClockControl+0x11a>
 8000590:	4b3d      	ldr	r3, [pc, #244]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000592:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000594:	4a3c      	ldr	r2, [pc, #240]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000596:	f023 0301 	bic.w	r3, r3, #1
 800059a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800059c:	e06c      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOB) {GPIOB_PERIPH_CLK_DIS();}
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	4a3a      	ldr	r2, [pc, #232]	; (800068c <GPIO_PeriClockControl+0x208>)
 80005a2:	4293      	cmp	r3, r2
 80005a4:	d106      	bne.n	80005b4 <GPIO_PeriClockControl+0x130>
 80005a6:	4b38      	ldr	r3, [pc, #224]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80005a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005aa:	4a37      	ldr	r2, [pc, #220]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80005ac:	f023 0302 	bic.w	r3, r3, #2
 80005b0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005b2:	e061      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOC) {GPIOC_PERIPH_CLK_DIS();}
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	4a36      	ldr	r2, [pc, #216]	; (8000690 <GPIO_PeriClockControl+0x20c>)
 80005b8:	4293      	cmp	r3, r2
 80005ba:	d106      	bne.n	80005ca <GPIO_PeriClockControl+0x146>
 80005bc:	4b32      	ldr	r3, [pc, #200]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80005be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005c0:	4a31      	ldr	r2, [pc, #196]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80005c2:	f023 0304 	bic.w	r3, r3, #4
 80005c6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005c8:	e056      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOD) {GPIOD_PERIPH_CLK_DIS();}
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	4a31      	ldr	r2, [pc, #196]	; (8000694 <GPIO_PeriClockControl+0x210>)
 80005ce:	4293      	cmp	r3, r2
 80005d0:	d106      	bne.n	80005e0 <GPIO_PeriClockControl+0x15c>
 80005d2:	4b2d      	ldr	r3, [pc, #180]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80005d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005d6:	4a2c      	ldr	r2, [pc, #176]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80005d8:	f023 0308 	bic.w	r3, r3, #8
 80005dc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005de:	e04b      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOE) {GPIOE_PERIPH_CLK_DIS();}
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	4a2d      	ldr	r2, [pc, #180]	; (8000698 <GPIO_PeriClockControl+0x214>)
 80005e4:	4293      	cmp	r3, r2
 80005e6:	d106      	bne.n	80005f6 <GPIO_PeriClockControl+0x172>
 80005e8:	4b27      	ldr	r3, [pc, #156]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80005ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005ec:	4a26      	ldr	r2, [pc, #152]	; (8000688 <GPIO_PeriClockControl+0x204>)
 80005ee:	f023 0310 	bic.w	r3, r3, #16
 80005f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005f4:	e040      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOF) {GPIOF_PERIPH_CLK_DIS();}
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	4a28      	ldr	r2, [pc, #160]	; (800069c <GPIO_PeriClockControl+0x218>)
 80005fa:	4293      	cmp	r3, r2
 80005fc:	d106      	bne.n	800060c <GPIO_PeriClockControl+0x188>
 80005fe:	4b22      	ldr	r3, [pc, #136]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000600:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000602:	4a21      	ldr	r2, [pc, #132]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000604:	f023 0320 	bic.w	r3, r3, #32
 8000608:	6313      	str	r3, [r2, #48]	; 0x30
}
 800060a:	e035      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOG) {GPIOG_PERIPH_CLK_DIS();}
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	4a24      	ldr	r2, [pc, #144]	; (80006a0 <GPIO_PeriClockControl+0x21c>)
 8000610:	4293      	cmp	r3, r2
 8000612:	d106      	bne.n	8000622 <GPIO_PeriClockControl+0x19e>
 8000614:	4b1c      	ldr	r3, [pc, #112]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000616:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000618:	4a1b      	ldr	r2, [pc, #108]	; (8000688 <GPIO_PeriClockControl+0x204>)
 800061a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800061e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000620:	e02a      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOH) {GPIOH_PERIPH_CLK_DIS();}
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	4a1f      	ldr	r2, [pc, #124]	; (80006a4 <GPIO_PeriClockControl+0x220>)
 8000626:	4293      	cmp	r3, r2
 8000628:	d106      	bne.n	8000638 <GPIO_PeriClockControl+0x1b4>
 800062a:	4b17      	ldr	r3, [pc, #92]	; (8000688 <GPIO_PeriClockControl+0x204>)
 800062c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800062e:	4a16      	ldr	r2, [pc, #88]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000630:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000634:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000636:	e01f      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOI) {GPIOI_PERIPH_CLK_DIS();}
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	4a1b      	ldr	r2, [pc, #108]	; (80006a8 <GPIO_PeriClockControl+0x224>)
 800063c:	4293      	cmp	r3, r2
 800063e:	d106      	bne.n	800064e <GPIO_PeriClockControl+0x1ca>
 8000640:	4b11      	ldr	r3, [pc, #68]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000642:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000644:	4a10      	ldr	r2, [pc, #64]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000646:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800064a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800064c:	e014      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOJ) {GPIOJ_PERIPH_CLK_DIS();}
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	4a16      	ldr	r2, [pc, #88]	; (80006ac <GPIO_PeriClockControl+0x228>)
 8000652:	4293      	cmp	r3, r2
 8000654:	d106      	bne.n	8000664 <GPIO_PeriClockControl+0x1e0>
 8000656:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000658:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800065a:	4a0b      	ldr	r2, [pc, #44]	; (8000688 <GPIO_PeriClockControl+0x204>)
 800065c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000660:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000662:	e009      	b.n	8000678 <GPIO_PeriClockControl+0x1f4>
		else if(pGPIOx == GPIOK) {GPIOK_PERIPH_CLK_DIS();}
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	4a12      	ldr	r2, [pc, #72]	; (80006b0 <GPIO_PeriClockControl+0x22c>)
 8000668:	4293      	cmp	r3, r2
 800066a:	d105      	bne.n	8000678 <GPIO_PeriClockControl+0x1f4>
 800066c:	4b06      	ldr	r3, [pc, #24]	; (8000688 <GPIO_PeriClockControl+0x204>)
 800066e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000670:	4a05      	ldr	r2, [pc, #20]	; (8000688 <GPIO_PeriClockControl+0x204>)
 8000672:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000676:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000678:	bf00      	nop
 800067a:	370c      	adds	r7, #12
 800067c:	46bd      	mov	sp, r7
 800067e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000682:	4770      	bx	lr
 8000684:	40020000 	.word	0x40020000
 8000688:	40023800 	.word	0x40023800
 800068c:	40020400 	.word	0x40020400
 8000690:	40020800 	.word	0x40020800
 8000694:	40020c00 	.word	0x40020c00
 8000698:	40021000 	.word	0x40021000
 800069c:	40021400 	.word	0x40021400
 80006a0:	40021800 	.word	0x40021800
 80006a4:	40021c00 	.word	0x40021c00
 80006a8:	40022000 	.word	0x40022000
 80006ac:	40022400 	.word	0x40022400
 80006b0:	40022800 	.word	0x40022800

080006b4 <GPIO_ReadFromInputPin>:


// Data IO
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNum)
{
 80006b4:	b480      	push	{r7}
 80006b6:	b085      	sub	sp, #20
 80006b8:	af00      	add	r7, sp, #0
 80006ba:	6078      	str	r0, [r7, #4]
 80006bc:	460b      	mov	r3, r1
 80006be:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx -> IDR >> pinNum) & 0x00000001);
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	691a      	ldr	r2, [r3, #16]
 80006c4:	78fb      	ldrb	r3, [r7, #3]
 80006c6:	fa22 f303 	lsr.w	r3, r2, r3
 80006ca:	b2db      	uxtb	r3, r3
 80006cc:	f003 0301 	and.w	r3, r3, #1
 80006d0:	73fb      	strb	r3, [r7, #15]
	return value;
 80006d2:	7bfb      	ldrb	r3, [r7, #15]
}
 80006d4:	4618      	mov	r0, r3
 80006d6:	3714      	adds	r7, #20
 80006d8:	46bd      	mov	sp, r7
 80006da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006de:	4770      	bx	lr

080006e0 <GPIO_ToggleOutputPin>:
	pGPIOx -> ODR = data;
}


void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t pinNum)
{
 80006e0:	b480      	push	{r7}
 80006e2:	b083      	sub	sp, #12
 80006e4:	af00      	add	r7, sp, #0
 80006e6:	6078      	str	r0, [r7, #4]
 80006e8:	460b      	mov	r3, r1
 80006ea:	70fb      	strb	r3, [r7, #3]
	pGPIOx -> ODR ^= (1 << pinNum);
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	695b      	ldr	r3, [r3, #20]
 80006f0:	78fa      	ldrb	r2, [r7, #3]
 80006f2:	2101      	movs	r1, #1
 80006f4:	fa01 f202 	lsl.w	r2, r1, r2
 80006f8:	405a      	eors	r2, r3
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	615a      	str	r2, [r3, #20]
}
 80006fe:	bf00      	nop
 8000700:	370c      	adds	r7, #12
 8000702:	46bd      	mov	sp, r7
 8000704:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000708:	4770      	bx	lr
	...

0800070c <__libc_init_array>:
 800070c:	b570      	push	{r4, r5, r6, lr}
 800070e:	4d0d      	ldr	r5, [pc, #52]	; (8000744 <__libc_init_array+0x38>)
 8000710:	4c0d      	ldr	r4, [pc, #52]	; (8000748 <__libc_init_array+0x3c>)
 8000712:	1b64      	subs	r4, r4, r5
 8000714:	10a4      	asrs	r4, r4, #2
 8000716:	2600      	movs	r6, #0
 8000718:	42a6      	cmp	r6, r4
 800071a:	d109      	bne.n	8000730 <__libc_init_array+0x24>
 800071c:	4d0b      	ldr	r5, [pc, #44]	; (800074c <__libc_init_array+0x40>)
 800071e:	4c0c      	ldr	r4, [pc, #48]	; (8000750 <__libc_init_array+0x44>)
 8000720:	f000 f818 	bl	8000754 <_init>
 8000724:	1b64      	subs	r4, r4, r5
 8000726:	10a4      	asrs	r4, r4, #2
 8000728:	2600      	movs	r6, #0
 800072a:	42a6      	cmp	r6, r4
 800072c:	d105      	bne.n	800073a <__libc_init_array+0x2e>
 800072e:	bd70      	pop	{r4, r5, r6, pc}
 8000730:	f855 3b04 	ldr.w	r3, [r5], #4
 8000734:	4798      	blx	r3
 8000736:	3601      	adds	r6, #1
 8000738:	e7ee      	b.n	8000718 <__libc_init_array+0xc>
 800073a:	f855 3b04 	ldr.w	r3, [r5], #4
 800073e:	4798      	blx	r3
 8000740:	3601      	adds	r6, #1
 8000742:	e7f2      	b.n	800072a <__libc_init_array+0x1e>
 8000744:	0800076c 	.word	0x0800076c
 8000748:	0800076c 	.word	0x0800076c
 800074c:	0800076c 	.word	0x0800076c
 8000750:	08000770 	.word	0x08000770

08000754 <_init>:
 8000754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000756:	bf00      	nop
 8000758:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800075a:	bc08      	pop	{r3}
 800075c:	469e      	mov	lr, r3
 800075e:	4770      	bx	lr

08000760 <_fini>:
 8000760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000762:	bf00      	nop
 8000764:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000766:	bc08      	pop	{r3}
 8000768:	469e      	mov	lr, r3
 800076a:	4770      	bx	lr
